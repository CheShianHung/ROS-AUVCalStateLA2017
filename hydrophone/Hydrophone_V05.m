    %Program Uses NI 9222 DATA Acquisition to detect hydrophone signals 
%V04- changed from IIR Butterworth filter to FIR Equiripple filter with 100 order.
clc, clear all, close all
s = daq.createSession('ni');
d = daq.getDevices();
% MATLAB Code
% Generated by MATLAB(R) 9.2 and the Signal Processing Toolbox 7.4.
% Generated on: 06-Jul-2017 17:40:20

% Equiripple Bandpass filter designed using the FIRPM function.

% All frequency values are in Hz.
Fs = 400000;  % Sampling Frequency

N      = 100;    % Order
Fstop1 = 18000;  % First Stopband Frequency
Fpass1 = 24900;  % First Passband Frequency
Fpass2 = 25100;  % Second Passband Frequency
Fstop2 = 42000;  % Second Stopband Frequency
Wstop1 = 1;      % First Stopband Weight
Wpass  = 1;      % Passband Weight
Wstop2 = 1;      % Second Stopband Weight
dens   = 20;     % Density Factor

% Calculate the coefficients using the FIRPM function.
b  = firpm(N, [0 Fstop1 Fpass1 Fpass2 Fstop2 Fs/2]/(Fs/2), [0 0 1 1 0 ...
           0], [Wstop1 Wpass Wstop2], {dens});
Hd = dfilt.dffir(b);

h1 = addAnalogInputChannel(s,'cDAQ1Mod1', 'ai1', 'Voltage');
h2 = addAnalogInputChannel(s,'cDAQ1Mod1', 'ai2', 'Voltage');
h3 = addAnalogInputChannel(s,'cDAQ1Mod1', 'ai3', 'Voltage');
s.Rate = 400000; %sampling rate
s.DurationInSeconds = 1;

%blue = 1, red = 2, yellow = x3

while (1)
data = startForeground(s); 
f = filter(Hd, data);
%f = filtfilt(1, Hd, data);
%f = data;
for i = 1:3
    if(mean(f(:,i)) > 0)
        
            f(:,i) = f(:,i) - mean(f(:,i));
    else
            f(:,i) = f(:,i) + mean(f(:,i));
    end
end

f1 = f(:,1);
f2 = f(:,2);
f3 = f(:,3);

%r = xcorr(f1, f3);
%delay = finddelay(f2,f);
%subplot(1,2,1);
plot (f);
%subplot(1,2,2);
%plot (r);
%disp(delay);
%[newF1, newF2] = alignsignals(f1, f2);



end
